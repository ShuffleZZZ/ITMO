import numpy as np

SIZE = 12

def beautify_print_matrix(A, b, format="{:3}"):
  for A_i, b_i in zip(A,b):
    print((" ".join([f"{format}" for i in range(len(A_i))]) + f" | {format}").format(*A_i, b_i))

def symmetric(A, b):
  return A.T @ A, A.T @ b

diag_A =  np.array([[ 73,  -8,  -1,  -2,   2,  -9,   3,   1, -10,  -3,   0, -10],
                    [ -9,  89,  -1,   0,   8,   3,   7,   6, -10,   7,  -6,   6],
                    [ -2,   0,  79,   7,  -8,   8,   7,   5,   0,   8,  -4,   8],
                    [ -5,  -5,  -5,  91,  -8,  -7,  -3,   8,  -5, -10,   7,   7],
                    [  8,  -8,   3,   3,  90,  -8,  -5,   7,   7,  -1, -10,   1],
                    [ -3, -10,   7,   8,  -7,  98,  -5,  -5,   7,  -3, -10,  -8],
                    [  4,  -1,  -9, -10,  -2,  -1,  73,   3,   0,   7,  -7,   2],
                    [  9,   2,  -4,  -7,   5, -10, -10,  92,   7,  -9,  -2,  -3],
                    [ -1, -10,  -1, -10, -10,  -6,   5,  -4,  87,  -6,   3,  -2],
                    [ -4,  -6,  -1,   9,  -6, -10,   8,  -3,  -8,  86,   2,   1],
                    [  1,   1,   5,   4,   7,   9,   6,   3,  -1,   0,  68,   9],
                    [  0,   5,   4,   5,  -1,  -4,  -1,  -1,   2,  -4,  -1,  56]], dtype='float')

diag_b =  np.array([-6,  9,  6,  4,  7, -3, -2, -4,  4,  2,  9,  9], dtype='float')
diag_b2 = np.array([[-6],  [9],  [6],  [4],  [7], [-3], [-2], [-4],  [4],  [2],  [9],  [9]], dtype='float')

def addColumn(A, b):
  return np.append(A, b, axis=1)

# print("diagonal matrix")
# beautify_print_matrix(diag_A,diag_b)
# print("\nequal symmetric matrix")
# beautify_print_matrix(*symmetric(diag_A, diag_b), "{:6}")

random_A =  np.array([[0.09309564, 0.46296415, 0.93137498, 0.30379636, 0.60629554,
        0.90973998, 0.00426276, 0.19193013, 0.12714471, 0.98395089,
        0.41040224, 0.87236367],
       [0.24521316, 0.76891462, 0.47166332, 0.5556138 , 0.7640046 ,
        0.4191569 , 0.42558694, 0.74468367, 0.95186366, 0.81468347,
        0.93406772, 0.82188337],
       [0.20463096, 0.51378138, 0.84972891, 0.84296079, 0.02373855,
        0.44717838, 0.66387815, 0.6176625 , 0.57209284, 0.2518196 ,
        0.25237493, 0.51676199],
       [0.88915617, 0.98855863, 0.61451299, 0.44720234, 0.89147715,
        0.86906785, 0.50745457, 0.06848476, 0.86179778, 0.84522305,
        0.49320219, 0.32588258],
       [0.23916065, 0.23565876, 0.37235472, 0.87458587, 0.97990565,
        0.5857281 , 0.70256509, 0.17350606, 0.22381707, 0.82835678,
        0.67731947, 0.1333916 ],
       [0.17298767, 0.63586527, 0.46412548, 0.88648519, 0.38913453,
        0.35721423, 0.9387787 , 0.19617401, 0.65420252, 0.82861313,
        0.62400863, 0.60401218],
       [0.44413746, 0.05817376, 0.73251397, 0.30839505, 0.17336861,
        0.26482829, 0.31740123, 0.64132097, 0.73143988, 0.53342659,
        0.80027895, 0.5935751 ],
       [0.43692048, 0.52223135, 0.08440857, 0.47345653, 0.94672124,
        0.80371001, 0.70694292, 0.45602091, 0.69618094, 0.14081753,
        0.10160605, 0.43117597],
       [0.74979061, 0.9161073 , 0.41144352, 0.98386061, 0.02432831,
        0.7018222 , 0.64096724, 0.78007994, 0.0174849 , 0.49527668,
        0.04442265, 0.88181195],
       [0.75950183, 0.49040078, 0.62319393, 0.77167114, 0.47741752,
        0.62422738, 0.76286834, 0.99691628, 0.6497834 , 0.39911004,
        0.30820308, 0.56014145],
       [0.01053739, 0.00870716, 0.455466  , 0.58312691, 0.67815592,
        0.75774646, 0.39740466, 0.58843173, 0.48111389, 0.1333951 ,
        0.84127853, 0.07958099],
       [0.16601879, 0.06465761, 0.78431029, 0.62657835, 0.43780624,
        0.06728081, 0.4753365 , 0.63883481, 0.59357431, 0.72090699,
        0.19220915, 0.58896905]])

random_b =  np.array([0.47220193, 0.50221156, 0.18020368, 0.39277003, 0.2226981 ,
       0.34068865, 0.92583397, 0.8516088 , 0.53789942, 0.69027344,
       0.0013637 , 0.93647125])
random_b2 =  np.array([[0.47220193], [0.50221156], [0.18020368], [0.39277003], [0.2226981] ,
       [0.34068865], [0.92583397], [0.8516088] , [0.53789942], [0.69027344],
       [0.0013637] , [0.93647125]])

# print("random matrix")
# beautify_print_matrix(random_A, random_b, "{:7.5f}")
# print("\nequal symmetric matrix")
# beautify_print_matrix(*symmetric(random_A, random_b), "{:7.5f}")

hilbert_A = [[1 / (i + j + 1) for i in range(SIZE)] for j in range(SIZE)]
hilbert_A = np.array(hilbert_A)
hilbert_b = np.array([0.9784394 , 0.18720544, 0.14532411, 0.95625824, 0.64578541,
       0.24602836, 0.23097559, 0.17866169, 0.62680722, 0.74928929,
       0.37815628, 0.02892572])
hilbert_b2 = np.array([[0.9784394] , [0.18720544], [0.14532411], [0.95625824], [0.64578541],
       [0.24602836], [0.23097559], [0.17866169], [0.62680722], [0.74928929],
       [0.37815628], [0.02892572]])

# print("Hilbert matrix")
# beautify_print_matrix(hilbert_A, hilbert_b, "{:7.5f}")
# print("\nequal symmetric matrix")
# beautify_print_matrix(*symmetric(hilbert_A, hilbert_b), "{:7.5f}")
